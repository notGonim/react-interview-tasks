[{"C:\\react-cegedim\\paginationtask\\src\\index.js":"1","C:\\react-cegedim\\paginationtask\\src\\App.js":"2","C:\\react-cegedim\\paginationtask\\src\\reportWebVitals.js":"3","C:\\react-cegedim\\paginationtask\\src\\container\\Home.js":"4","C:\\react-cegedim\\paginationtask\\src\\components\\Posts.js":"5","C:\\react-cegedim\\paginationtask\\src\\components\\Pagination.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":179,"mtime":1610750044516,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1592,"mtime":1610757460655,"results":"11","hashOfConfig":"8"},{"size":605,"mtime":1610759878505,"results":"12","hashOfConfig":"8"},{"size":844,"mtime":1610759876060,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"o3hu",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\react-cegedim\\paginationtask\\src\\index.js",[],["30","31"],"C:\\react-cegedim\\paginationtask\\src\\App.js",["32"],"import logo from './logo.svg';\nimport './App.css';\nimport { Home } from './container/Home';\n\nfunction App() {\n  return (\n    <>\n      <Home />\n    </>\n  );\n}\n\nexport default App;\n","C:\\react-cegedim\\paginationtask\\src\\reportWebVitals.js",[],"C:\\react-cegedim\\paginationtask\\src\\container\\Home.js",["33"],"import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Pagination } from '../components/Pagination'\r\n\r\nimport { Posts } from '../components/Posts'\r\n\r\nexport const Home = () => {\r\n    // free api that return arr of obj => {userId ,id,title ,body }\r\n    const apiUrl = 'https://jsonplaceholder.typicode.com/posts'\r\n\r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [currPage, setCurrPage] = useState(1)\r\n    const [postsPerPage, setPostsPerPage] = useState(10)\r\n\r\n\r\n    const fetchPosts = async () => {\r\n        setLoading(true)\r\n        const res = await fetch(apiUrl)\r\n        const data = await res.json()\r\n        setPosts(data)\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPosts()\r\n        // console.log(posts[0].title)\r\n    }, [])\r\n\r\n    //get curr posts\r\n    const indexOfLastPost = currPage * postsPerPage\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage\r\n    const currPosts = posts.slice(indexOfFirstPost, indexOfLastPost)\r\n\r\n    //change page\r\n    const paginate = pageNum => setCurrPage(pageNum)\r\n\r\n\r\n\r\n\r\n    return (\r\n        <PostContainer>\r\n            <h1>Posts : </h1>\r\n            <Posts posts={currPosts} loading={loading} />\r\n            <Pagination paginate={paginate} postPerPage={postsPerPage} totalPosts={posts.length} />\r\n        </PostContainer>\r\n    )\r\n}\r\n\r\n\r\nconst PostContainer = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    padding:10px;\r\n    margin:10px;\r\n    h1{\r\n        color: #124655;\r\n    }\r\n`\r\n","C:\\react-cegedim\\paginationtask\\src\\components\\Posts.js",[],"C:\\react-cegedim\\paginationtask\\src\\components\\Pagination.js",["34"],"import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const Pagination = ({ postPerPage, totalPosts, paginate }) => {\r\n\r\n    const pageNums = []\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\r\n        pageNums.push(i)\r\n    }\r\n\r\n    return (\r\n        <PageNumContainer>\r\n            {pageNums.map(num => (\r\n                <PageNum key={num} > <a onClick={() => paginate(num)} href=\"#\" >{num}</a></PageNum>\r\n            ))\r\n            }\r\n        </PageNumContainer>\r\n    )\r\n}\r\n\r\n\r\nconst PageNumContainer = styled.ul`\r\ndisplay :flex;\r\nlist-style:none;\r\npadding:5px;\r\nmargin:10px;\r\nmargin-left:15px;\r\nmargin-right:15px;\r\nborder-radius:5px;\r\n\r\n`\r\n\r\nconst PageNum = styled.li`\r\n    padding :10px;\r\n    border :1px solid #99a1a4;\r\n    a{\r\n    font-weight:bold;\r\n    text-decoration:none;\r\n}\r\n    \r\n`",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"39","severity":1,"message":"43","line":14,"column":26,"nodeType":"41","messageId":"42","endLine":14,"endColumn":41},{"ruleId":"44","severity":1,"message":"45","line":16,"column":38,"nodeType":"46","endLine":16,"endColumn":81},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setPostsPerPage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]