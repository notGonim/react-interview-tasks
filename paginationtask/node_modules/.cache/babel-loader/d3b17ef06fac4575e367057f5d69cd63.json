{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\react-cegedim\\\\paginationtask\\\\src\\\\components\\\\Pagination.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nexport const Pagination = ({\n  postPerPage,\n  totalPosts\n}) => {\n  const pageNums = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\n    pageNums.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: pageNums.map(num => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 33\n      }, this)]\n    }, num, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/react-cegedim/paginationtask/src/components/Pagination.js"],"names":["React","styled","Pagination","postPerPage","totalPosts","pageNums","i","Math","ceil","push","map","num"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAiC;AAEvD,QAAMC,QAAQ,GAAG,EAAjB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUJ,UAAU,GAAGD,WAAvB,CAArB,EAA0DG,CAAC,EAA3D,EAA+D;AAC3DD,IAAAA,QAAQ,CAACI,IAAT,CAAcH,CAAd;AACH;;AAED,sBACI;AAAA,cACKD,QAAQ,CAACK,GAAT,CAAaC,GAAG,iBACb;AAAA,mCAAgB;AAAG,QAAA,IAAI,EAAC,GAAR;AAAA,kBAAcA;AAAd;AAAA;AAAA;AAAA;AAAA,cAAhB;AAAA,OAASA,GAAT;AAAA;AAAA;AAAA;AAAA,YADH;AADL,mBADJ;AAQH,CAhBM;KAAMT,U","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nexport const Pagination = ({ postPerPage, totalPosts }) => {\r\n\r\n    const pageNums = []\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\r\n        pageNums.push(i)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {pageNums.map(num => (\r\n                <li key={num} > <a href=\"#\" >{num}</a></li>\r\n            ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}